version: '3'

#secrets:
#  pg_password:
#    file: ./password
networks:
  backend: {}
  traefik_public:
    external: true

services:
  db:
    image: postgres
#    secrets:
#      - pg_password
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: yolo
      POSTGRES_DB: postgres
#    entrypoint: [ '/bin/sh', '-c', 'export POSTGRES_PASSWORD=$$(cat /var/run/secrets/test) ; source /entrypoint.sh' ]
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.services.db.loadbalancer.server.port=5432"
      - "traefik.tcp.routers.db.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.db.entrypoints=db"


  jupyter:
    image: jupyter/datascience-notebook:latest
    environment:
      - JUPYTER_ENABLE_LAB=yes
    volumes:
      - ./notebooks:/home/jovyan/work
    platform: "linux/amd64"
    networks:
      - backend
    labels:
      - traefik.enable=true
      - traefik.http.routers.jupyter.rule=Host(`jupyter.localhost`)
#        && Path(`/jupyter`)
      - traefik.http.routers.jupyter.entrypoints=web
      - traefik.http.services.jupyter.loadbalancer.server.port=8888
#    command:
#      - jupyter --ip='*' --NotebookApp.token='' --NotebookApp.password=''

  traefik:
    image: traefik:v2.9
    ports:
      - '80:80'
      - '8080:8080'
      - '5432:5432'
    networks:
      - backend
      - traefik_public
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik:/etc/traefik/
    labels:
      traefik.enable: true
#      traefik.http.routers.traefik_https.rule: Host(`traefik.example.com`)
#      traefik.http.routers.traefik_https.entrypoints: websecure
#      traefik.http.routers.traefik_https.tls: true
#      traefik.http.routers.traefik_https.tls.certResolver: myresolver
#      traefik.http.routers.traefik_https.service: api@internal

  prometheus:
    image: prom/prometheus:v2.28.1
    networks:
      - backend
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
  db-metrics:
    image: prometheuscommunity/postgres-exporter:latest
    networks: [backend]
    depends_on: [db]
    ports:
      - '9187:9187'
    environment:
      DATA_SOURCE_NAME: postgresql://postgres_exporter:password@db:5432/marti_phd?sslmode=disable


  grafana:
    container_name: grafana
    image: grafana/grafana:8.3.0
    networks:
      - backend
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    volumes:
      - ./grafana-data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.localhost`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

